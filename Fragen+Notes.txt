Fragen:

- imports, gibt es die, wenn ja wie?

FailureTypes, PrimitiveDataTypes, Resources -> repo files importieren? 
<signatures__OperationInterface id="_evrBYJ8tEeqfZrwL1lVb2A" entityName="method1">
      <parameters__OperationSignature parameterName="myStringParam">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
</signatures__OperationInterface>

- Protocols bei Interfaces

- Hat ein Seff immer genau ein Anfang + Ende? Wie erstellt man ein seff - welche Factory?

- Access nur über String statt jedes Mal der fetch Aufruf im creator?

- macht es Sinn, immer einen Namen zu verlangen? also direkt newComponent(String name)

- EventType hat Parameter und Parameter hat EventType


email: design: alles über die Factory erstellen -> PCM hat verschiedene Factorys; oder so erstellen
sinnvoll über Factory: components, interfaces, data types/failure/exception types, parameter, seff


ToDo:
- dataTypes einlesen 			-> Frage
- Seffs 						-> Frage
- imports 						-> Frage
- Resource required zeug 		-> später
- infrastructure zeug			-> später

- Sichtbarkeit
- Reihenfolge mit Interfaces regeln (varUsage von CompositeComponent)




iwann:
- Protocols der Interfaces
- Infrastructure Interfaces (+ Connectors etc)
- Exception Types



Notizen

- TextBasedModelGenerator nicht alles umgesetzt -> die hier verwendet sind, sind wichtig
- erst die Seffs anschauen
- Infrastructure and Resource Sachen zuletzt anschauen (Resource Interface)
- exception types erst mal ignorieren
- keine Passiv-Relationen erstellen


Durch die verschiedenen Referenzen: kann es zu Inkonsistenzen kommen, wenn mehrfach der gleiche Creator gebuilded wird, aber womöglich zwischendurch Änderungen entstehen -> es soll immer das gleiche Objekt bei rauskommen
=> vielleicht, wenn Build methode aufgerufen wird ein palladio objekt im creator objekt erstellen, dass dann referenziert/aktualisiert wird? Herausfinden, welche Dinge sich überhaupt ändern können nachdem sie referenziert wurden. Gibt es co-abhängigkeiten?


Das muss über die Factory abrufbar sein:
- Components, Interfaces, DataTypes
- Assembly Contexts, Roles
- Parameters



Factorys:

- AllocationFactory: Allocation + Allocation Context
- AllocationAdapterFactory
														- CompositionFactory: Connectors + Event Channel
														- CoreFactory: PCM Random Variable
- CoreAdapterFactory
- CoreResourceFactory
														- EntityFactory: Resource provided role, resource interface
- EntityAdapterFactory
- EntityResourceFactory
														- ParameterFactory: VariableCharacterisation, Variable usage, characterised variable
- ParameterAdapterFactory
- ParameterResourceFactory
- PcmFactory
- PcmAdapterFactory
- PcmResourceFactory
- ProtocolFactory
- ProtocolAdapterFactory
- ProtocolResourceFactory
- QosAnnotationsFactory: QoSAnnotations
														- ReliabilityFactory: Failure Types
- ReliabilityAdapterFactory
														- RepositoryFactory: Components etc.
- RepositoryAdapterFactory
- ResourcetypeFactory: resource interface, repo, signature, communication link, scheduling policy
														- SeffFactory: Seff Kram
- SeffAdapterFactory
- SeffResourceFactory
	- SeffReliabilityFactory: Recovery action
														- SubsystemFactory
- SubsystemAdapterFactory
- SubsystemResourceFactory
- SystemFactory: System
- SystemAdapterFactory
- SystemResourceFactory
- UsagemodelFactory
- UsagemodelAdapterFactory: Branch, delay, loop






Done:
- Composite + collection data types
- roles

